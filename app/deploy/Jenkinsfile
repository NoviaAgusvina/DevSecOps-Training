pipeline {
    agent any
    parameters {
        string(name: 'nexusServer', defaultValue: '10.8.60.123:5000', description: 'Image Registry address')
        string(name: 'nexusUser', defaultValue: 'jenkins', description: 'Image Registry username')
        string(name: 'nexusPassword', defaultValue: 'jenkinspass', description: 'Image Registry Password')
        choice(name: 'appEndpoint', choices: ['gosip-app-prod.apps.lab.i3datacenter.my.id', 'gosip-app-dev.apps.lab.i3datacenter.my.id'], description: 'App endpoint for zap to scan')
        string(name: 'ocpUser', defaultValue: 'jenkins', description: 'Openshift username')
        string(name: 'ocpPassword', defaultValue: 'sharkdevsecops1', description: 'Openshift user password')
        choice(name: 'ocpProject', choices: ['intern-devsecops-dev', 'intern-devsecops-prod', 'intern-devsecops-stage'], description: 'env where app to be deployed')
        choice(name: 'manifestFile', choices: ['dev-deployment.yaml', 'prod-deployment.yaml'], description: 'env where app to be deployed')
    }
    stages {
        stage('Sonnar-Scanner') {
            steps {
                    sh """
                    cd app/
                    /home/jenkins/sonar-scanner/sonar-scanner/bin/sonar-scanner
                    """
            }
        }
        stage('Misconfig Scanner') {
            steps {
                sh """
                cd app/
                mkdir /var/www/html/trivy/pipeline${BUILD_NUMBER}/
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.html
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.json
                trivy config . -f json -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.json
                trivy config . --format template --template "@deploy/html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.html --exit-code 0 --severity HIGH,CRITICAL
                """
            }
        }
        // scan filesystem such package.json and requirements.txt
        stage('Filesystem Scanner') {
            steps {
                sh """
                cd app/
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfs.html
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfs.json
                trivy fs . -f json -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfs.json
                trivy fs . --format template --template "@deploy/html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfs.html --exit-code 0 --severity HIGH,CRITICAL
                """
            }
        }
        stage('Create Image') {
            steps {
                sh """
                docker image rm ${params.nexusServer}/devsecops:v${BUILD_NUMBER} || echo "No existing image found"
                docker build --no-cache -t ${params.nexusServer}/devsecops:v${BUILD_NUMBER} -f app/deploy/Dockerfile app/
                """
            }
        }
        stage('Vulnerability and Secret Scanner') {
            steps {
                sh """
                cd app/deploy
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.html
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.json
                trivy image -f json -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.json ${params.nexusServer}/devsecops:v${BUILD_NUMBER}
                trivy image --format template --template "@html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.html --exit-code 0 --severity HIGH,CRITICAL ${params.nexusServer}/devsecops:v${BUILD_NUMBER}
                """
            }
        }

        stage('Push Image to nexus') {
            steps {
                sh """
                set +x
                docker login --username=${params.nexusUser} --password=${params.nexusPassword} ${params.nexusServer}
                set -x
                docker push ${params.nexusServer}/devsecops:v${BUILD_NUMBER}
                docker rmi ${params.nexusServer}/devsecops:v${BUILD_NUMBER}
                docker images
                """
            }
        }
        stage('Deploy app to dev env') {
            steps {
                    sh """
                    cd app/deploy/manifest
                    ls -la
                    oc login -u ${params.ocpUser} -p ${params.ocpPassword} --server=https://api.lab.i3datacenter.my.id:6443
                    oc project ${params.ocpProject}
                    oc create -f ${params.manifestFile}
                    sleep 30s
                    oc get pod
                    oc get svc
                    oc get route
                    """
            }
        }
        stage('Zap Proxy') {
            steps {
                    sh """
                    docker run --rm -v /zap:/zap/wrk:rw -v /opt/hosts_zap:/etc/hosts -t ictu/zap2docker-weekly zap-baseline.py -I -j \
                    -t ${params.appEndpoint} \
                    -r reportzap.html \
                    -J reportzap.json \
                    -g reportzap.conf \
                    --hook=/zap/auth_hook.py \
                    -z "auth.loginurl=${params.appEndpoint}/login \
                        auth.username="user" \
                        auth.password="password""
                    mkdir /var/www/html/zapReport/pipeline${BUILD_NUMBER}/
                    cp /zap/* /var/www/html/zapReport/pipeline${BUILD_NUMBER}/
                    rm -rf /zap/*
                    """
            }
        }
        stage('Deploy app to Prod env') {
            steps {
                    sh """
                    cd app/deploy/manifest
                    ls -la
                    oc login -u ${params.ocpUser} -p ${params.ocpPassword} --server=https://api.lab.i3datacenter.my.id:6443
                    oc project ${params.ocpProject}
                    oc create -f ${params.manifestFile}
                    sleep 30s
                    oc get pod
                    oc get svc
                    oc get route
                    """
            }
        }
    }
}